@PointClass base(BaseEntityPoint, BaseLight)
	autovis(Lights, Spotlight)
	lightprop("models/editor/spot.mdl") 
	lightcone() 
	sphere(_distance) 
	line(255 255 255, targetname, target)
= light_spot: "An invisible and directional spotlight."
	[
	target(target_destination) : "Entity to point at" : : "The name of an entity in the map that the spotlight will point at. " +
		"This will override the spotlight's angles."

	_inner_cone(integer) : "Inner (bright) angle" : 30
	_cone(integer) : "Outer (fading) angle" : 45
	_exponent(integer) : "Focus" : 1
	pitch(angle_negative_pitch) : "Pitch" : -90
	spawnflags(flags)  =
		[
		1: "Initially dark" : 0
		]
	
	onlylightworld(boolean) : "Only Light World" : 0 : "Remove this entity after the lighting is calculated, leaving only the baked lighting. This can be used to prevent unwanted lighting on dynamic props. Note: The postcompiler must be run again after VRAD for this feature to function correctly!"

	]
